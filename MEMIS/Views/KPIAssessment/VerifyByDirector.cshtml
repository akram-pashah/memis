@using MEMIS.Data;
@model cloudscribe.Pagination.Models.PagedResult<KPIAssessment>

@{
    ViewData["Title"] = "Verify";
    //Layout = "~/Views/Shared/_MELayout.cshtml";
}
@*<style>
        .content {
            width: calc(100% - 280px);
        }

        table {
            font-size: 12px;
        }
    </style>*@


<form asp-action="VerifyByDirector" method="post">
    <div class="row">

        <div class="col-md-2">
            <label class="control-label">Financial Year</label>
        </div>
        <div class="col-md-3">
            <select class="form-control form-control-sm" name="month" asp-items="ViewBag.Months">
                <option value="">Select Year</option>
            </select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-sm btn-outline-primary">Search</button>
        </div>
    </div>
</form>

<div>
    <table class="table table-striped table-hover dt-responsive nowrap">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].FY)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].PerformanceIndicator)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].FrequencyofReporting)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].IndicatorFormulae)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Data[0].IndicatorDefinition)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].Target)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].Numerator)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].Denominator)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].Rate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].Achieved)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].Justification)
                </th>
                <th>
                    Department
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Data)
            {
                <tr>
                    <td>
                        @GetFinYear(item.FY)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PerformanceIndicator)
                    </td>
                    <td>
                        @GetFrequencyofReporting(item.FrequencyofReporting)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IndicatorFormulae)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IndicatorDefinition)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Target)
                    </td>
                    <td>
                        Achieved
                        @Html.DisplayFor(modelItem => item.Numerator)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Denominator)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rate)
                    </td>
                    <td style="background-color:@(item.Achieved=="1.0"?"#00b050":item.Achieved=="0.5"?"#fefe00":"#fd0000")">
                        @getAchievement(item.Achieved)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Justification)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.KPIMasterFk.ResponsibleParty)
                    </td>

                    <td>
                        <a role="button" class="btn btn-outline-secondary" asp-action="VerifyDetailsDirector" asp-route-id="@item.Id" title="Verify">Verify</a>
                    </td>
                </tr>
            }
            @functions
            {
                public string GetFinYear(int year)
                {
                    foreach (var nmonth in ListHelper.FYear())
                    {
                        if (Convert.ToInt32(nmonth.Value) == year)
                        {
                            return nmonth.Text;
                        }
                    }
                    return "NA";
                }
                public string getAchievement(string achieve)
                {
                    foreach (var nachieve in ListHelper.AchievementStatus())
                    {
                        if (nachieve.Value == achieve)
                        {
                            return nachieve.Text;
                        }
                    }
                    return "NA";
                }
                public string GetFrequencyofReporting(int reporting)
                {
                    foreach (var nreporting in ListHelper.FrequencyofReporting())
                    {
                        if (Convert.ToInt32(nreporting.Value) == reporting)
                        {
                            return nreporting.Text;
                        }
                    }
                    return "NA";
                }
            }
        </tbody>
    </table>
    <cs-pager cs-paging-pagenumber="@Model.PageNumber"
              cs-paging-totalitems="@Model.TotalItems"
              cs-paging-pagesize="@Model.PageSize"
              cs-pagenumber-param="pagenumber"
              asp-controller="SDTAssessment"
              asp-action="Index"
              cs-pager-li-current-class="page-item active"
              cs-pager-li-other-class="page-item"
              cs-pager-li-non-active-class="page-item disabled"
              cs-pager-link-current-class="page-link"
              cs-pager-link-other-class="page-link"></cs-pager>
</div>
