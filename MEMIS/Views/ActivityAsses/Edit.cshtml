@model MEMIS.Models.ActivityAssessDto

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Pages/Shared/_ContentNavbarLayout.cshtml";
}

<h1>Edit</h1>

<h4>Department Plan</h4>
<hr />
<div class="row">
    <form asp-action="Edit">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-md-4">
            <div class="form-group">
                <input asp-for="intAssess" hidden />
                <label asp-for="intIntervention" class="control-label"></label>
                @Html.DropDownList("intIntervention", new SelectList(ViewBag.StrategicIntervention, "intIntervention", "InterventionName"), new { @class = "form-control form-select", @required = "required", onchange = "loadStrategicActions(this.value)" })
            </div>
            <br />
            <div class="form-group">
                <label asp-for="intAction" class="control-label"></label>
                @Html.DropDownList("intAction", new SelectList(ViewBag.StrategicAction, "intAction", "actionName"), new { @class = "form-control form-select", id = "StrategicAction", @required = "required", onchange = "loadActivities(this.value)" })
            </div>
            <br />
            <div class="form-group">
                <label asp-for="intActivity" class="control-label"></label>
                @Html.DropDownList("intActivity", new SelectList(ViewBag.Activity, "intActivity", "activityName"), new { @class = "form-control form-select",id="Activity", @required = "required" })
            </div>
            <br />
            <div class="form-group">
                <label asp-for="outputIndicator" class="control-label"></label>
                <input asp-for="outputIndicator" class="form-control" />
                <span asp-validation-for="outputIndicator" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <label asp-for="baseline" class="control-label"></label>
                <input asp-for="baseline" class="form-control" type="number" />
                <span asp-validation-for="baseline" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <label asp-for="budgetCode" class="control-label"></label>
                <input asp-for="budgetCode" class="form-control" type="number" />
                <span asp-validation-for="budgetCode" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <label asp-for="comparativeTarget" class="control-label"></label>
                <input asp-for="comparativeTarget" class="form-control" type="number" />
                <span asp-validation-for="comparativeTarget" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <label asp-for="justification" class="control-label"></label>
                <input asp-for="justification" class="form-control" />
                <span asp-validation-for="justification" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <label asp-for="budgetAmount" class="control-label"></label>
                <input asp-for="budgetAmount" id="budgetAmount" class="form-control" type="number" />
                <span asp-validation-for="budgetAmount" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <label asp-for="IdentifiedRisks" class="control-label"></label>
                <input asp-for="IdentifiedRisks" class="form-control" type="text" />
                <span asp-validation-for="IdentifiedRisks" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <label asp-for="intDept" class="control-label"></label>
                @Html.DropDownList("intDept", new SelectList(ViewBag.Depts, "intDept", "deptName"), new { @class = "form-control form-select", @required = "required" })
                @* <select asp-for="intDept" class="form-control" asp-items="ViewBag.Depts"></select> *@
            </div>
        </div>
        <br />
        <div class="col-md-8">
            <div class="input-group">
                <div class="col">
                    <label asp-for="Quarter" class="control-label">Quarter</label>
                    <select id="Quarter" class="form-control" asp-items="ViewBag.Quarter"></select>
                    <span asp-validation-for="Quarter" class="text-danger"></span>
                </div>
                <div class="col">
                    <label asp-for="QTarget" class="control-label">Target</label>
                    <input id="QTarget" asp-formaction="QTarget" class="form-control" type="number" />
                    <span asp-validation-for="QTarget" class="text-danger"></span>
                </div>
                <div class="col">
                    <label asp-for="QBudget" class="control-label">Budget</label>
                    <input id="QBudget" class="form-control" value="budgetAmount * QTarget" type="number" />
                    <span asp-validation-for="QBudget" class="text-danger"></span>
                </div>
                <div class="col-auto align-self-end">
                    <button type="button" class="btn btn-outline-primary" onclick="addQuarterDetails()">
                        <i class="bx bx-plus-circle"></i>
                    </button>
                    <button class="btn btn-outline-primary" type="button" data-bs-toggle="collapse" data-bs-target="#accordionQuarterDetailsCollapse" aria-expanded="false" aria-controls="accordionQuarterDetailsCollapse">
                        <i class="bx bx-collapse-alt"></i>
                    </button>
                </div>
            </div>
            <div id="quarterValidation" class="text-danger"></div>
            <div class="accordion" id="accordionQuarterDetails">
                <div class="card accordion-item">
                    <div id="accordionQuarterDetailsCollapse" class="accordion-collapse collapses show" data-bs-parent="#accordionQuarterDetails">
                        <div class="accordion-body">
                            <table class="table table-striped table-bordered" id="quarterDetailsTable">
                                <thead class="thead-dark">
                                    <tr>
                                        <th>Id</th>
                                        <th>Quarter</th>
                                        <th>Target</th>
                                        <th>Budget</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.QuaterlyPlans?.Count; i++)
                                    {
                                        <tr>
                                            <td>
                                                @(i + 1)
                                                <input asp-for="QuaterlyPlans[i].Id" class="form-control" hidden />
                                                <input asp-for="QuaterlyPlans[i].DeptPlanId" class="form-control" hidden />
                                                <input asp-for="QuaterlyPlans[i].ActivityAccessId" class="form-control" hidden />
                                            </td>
                                            <td>
                                                <select asp-for="QuaterlyPlans[i].Quarter"  class="form-control" asp-items="ViewBag.Quarter"></select>
                                            </td>
                                            <td>
                                                <input asp-for="QuaterlyPlans[i].QTarget" class="form-control" onchange="updateQBbudget(this)" />
                                            </td>
                                            <td>
                                                <input asp-for="QuaterlyPlans[i].QBudget" readonly class="form-control" />
                                            </td>
                                            <td>
                                                <a class="btn btn-danger delete-btn" onclick="removeEvent(this)" data-toggle="tooltip" data-placement="top" title="Delete"><i class="bx bx-message-square-x"></i></a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <br />
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </form>

</div> 
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    var quarterOptions = $('#Quarter').html(); // Store the HTML content of the Quarter dropdown

    function addQuarterDetails() {
        var quarter = $('#Quarter').val();
        var target = $('#QTarget').val();
        var budget = $('#QBudget').val();

        if (!quarter || !target || !budget) {
            $('#quarterValidation').text("All fields are required.");
            return;
        } else {
            $('#quarterValidation').text("");
        }

        // Check if the selected quarter already exists in the table
        var exists = false;
        $('#quarterDetailsTable tbody tr').each(function () {
            var selectedQuarter = $(this).find('select[name*="Quarter"]').val();
            if (selectedQuarter === quarter) {
                exists = true;
                return false; // Break out of the loop
            }
        });

        if (exists) {
            $('#quarterValidation').text("Selected quarter already exists.");
            return;
        }

        var $tableBody = $('#quarterDetailsTable tbody');
        var index;

        if ($tableBody.find('tr:first').text().trim() === "No data available in table") {
            $tableBody.find('tr:first').remove();
            index = 0;
        } else {
            index = $tableBody.find('tr').length;
        }

        var options = '';
        $('#Quarter option').each(function () {
            var value = $(this).val();
            var text = $(this).text();
            var selected = value === quarter ? 'selected' : '';
            options += `<option value="${value}" ${selected}>${text}</option>`;
        });

        var row = `
                    <tr>
                        <td>${index + 1}</td>
                        <td>
                            <select name="QuaterlyPlans[${index}].Quarter" readonly class="form-control">
                                ${options}
                            </select>
                        </td>
                        <td><input name="QuaterlyPlans[${index}].QTarget" readonly value="${target}" class="form-control" /></td>
                        <td><input name="QuaterlyPlans[${index}].QBudget" readonly value="${budget}" class="form-control" /></td>
                        <td>
                            <button type="button" class="btn btn-danger delete-btn" onclick="removeQuarterDetails(this)" data-toggle="tooltip" data-placement="top" title="Delete">
                                <i class="bx bx-message-square-x"></i>
                            </button>
                        </td>
                    </tr>`;

        $tableBody.append(row);

        // Clear the inputs
        $('#Quarter').val('');
        $('#QTarget').val('');
        $('#QBudget').val('');

        $('#accordionQuarterDetailsCollapse').addClass('show');
    }

    function removeQuarterDetails(button) {
        $(button).closest('tr').remove();
        updateRowIndexes();
    }

    function updateRowIndexes() {
        $('#quarterDetailsTable tbody tr').each(function (index, row) {
            $(row).find('select, input').each(function () {
                var name = $(this).attr('name');
                if (name) {
                    var newName = name.replace(/\[\d+\]/, `[${index}]`);
                    $(this).attr('name', newName);
                }
            });
        });
    }
    function loadStrategicActions(interventionId) {
        if (interventionId) {
            $.getJSON('@Url.Action("GetStrategicActions")', { interventionId: interventionId }, function (data) {
                var $actionDropdown = $('#StrategicAction');
                $actionDropdown.empty();
                $actionDropdown.append('<option value="">Select Strategic Action</option>');
                $.each(data, function (index, item) {
                    $actionDropdown.append('<option value="' + item.intAction + '">' + item.actionName + '</option>');
                });
            });
        }
    }

    function loadActivities(actionId) {
        if (actionId) {
            $.getJSON('@Url.Action("GetActivities")', { actionId: actionId }, function (data) {
                var $activityDropdown = $('#Activity');
                $activityDropdown.empty();
                $activityDropdown.append('<option value="">Select Activity</option>');
                $.each(data, function (index, item) {
                    $activityDropdown.append('<option value="' + item.intActivity + '">' + item.activityName + '</option>');
                });
            });
        }
    }

</script>
