@model MEMIS.Models.ActivityAssessDto


@{
    ViewData["Title"] = "Set Regional Target";
    Layout = "~/Pages/Shared/_ContentNavbarLayout.cshtml";
}

<h1>Set Regional Target</h1>

<hr />


<div class="row">
    <div class="col-md-6">
        <form asp-action="SetRegionalTarget" method="post" onsubmit="return validateQuarters()">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="intRegion" />
            <input type="hidden" asp-for="intAssess" />
            <div class="form-group">
                <label asp-for="budgetAmount" class="control-label"></label>
                <input asp-for="budgetAmount" class="form-control" />
                <span asp-validation-for="budgetAmount" class="text-danger"></span>
            </div>
            <div class="col">
                <div class="input-group">
                    <div class="col">
                        <label asp-for="Quarter" class="control-label">Quarter</label>
                        <select id="Quarter" class="form-control">
                            <option value="">Select Quarter</option>
                            <option value="1">Quarter 1</option>
                            <option value="2">Quarter 2</option>
                            <option value="3">Quarter 3</option>
                            <option value="4">Quarter 4</option>
                        </select>
                        <span asp-validation-for="Quarter" class="text-danger"></span>
                    </div>
                    <div class="col">
                        <label asp-for="QTarget" class="control-label">Target</label>
                        <input id="QTarget" class="form-control" type="number" />
                        <span asp-validation-for="QTarget" class="text-danger"></span>
                    </div>
                    <div class="col">
                        <label asp-for="QBudget" class="control-label">Budget</label>
                        <input id="QBudget" class="form-control" type="number" />
                        <span asp-validation-for="QBudget" class="text-danger"></span>
                    </div>
                    <div class="col align-content-end">
                        @* <label class="form-control"></label> *@
                        <button type="button" class="btn btn-outline-primary" onclick="addQuarterDetails()">
                            <i class="bx bx-plus-circle"></i>
                        </button>
                        <button class="btn btn-outline-primary" type="button" data-bs-toggle="collapse" data-bs-target="#accordionQuarterDetailsCollapse" aria-expanded="false" aria-controls="accordionQuarterDetailsCollapse">
                            <i class="bx bx-collapse-alt"></i>
                        </button>
                        <span hidden class="text-danger"></span>

                    </div>
                </div>
                <div id="quarterValidation" class="text-danger"></div>
                <div class="accordion" id="accordionQuarterDetails">
                    <div class="card accordion-item">
                        <div id="accordionQuarterDetailsCollapse" class="accordion-collapse collapse show" data-bs-parent="#accordionQuarterDetails">
                            <div class="accordion-body">
                                <table class="table table-striped table-bordered" id="quarterDetailsTable">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th>Id</th>
                                            <th>Quarter</th>
                                            <th>Target</th>
                                            <th>Budget</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.QuaterlyPlans?.Count; i++)
                                        {
                                            <tr>
                                                <td>
                                                    @(i + 1)
                                                    <input asp-for="QuaterlyPlans[i].Id" class="form-control" hidden />
                                                    <input asp-for="QuaterlyPlans[i].DeptPlanId" class="form-control" hidden />
                                                    <input asp-for="QuaterlyPlans[i].ActivityAccessId" class="form-control" hidden />
                                                </td>
                                                <td>
                                                    <select asp-for="QuaterlyPlans[i].Quarter" readonly class="form-control" asp-items="ViewBag.Quarter"></select>
                                                </td>
                                                <td>
                                                    <input asp-for="QuaterlyPlans[i].QTarget" class="form-control" readonly />
                                                </td>
                                                <td>
                                                    <input asp-for="QuaterlyPlans[i].QBudget" readonly class="form-control" />
                                                </td>
                                                <td>
                                                    <a class="btn btn-danger delete-btn" onclick="removeEvent(this)" data-toggle="tooltip" data-placement="top" title="Delete"><i class="bx bx-message-square-x"></i></a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                <input class="btn btn-primary" value="Save" type="submit" />
            </div>
            <br />
            <div>
                <button type="button" onclick="window.history.back();" class="btn btn-warning">Back to List</button>
            </div>
        </form>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#quarterDetailsTable').DataTable({
            "columnDefs": [
                { "orderable": false, "targets": 4 } // Disable sorting for the last column (Delete button)
            ],
            "paging": false, // Disable pagination
            "ordering": true, // Enable sorting
            "info": false // Disable info display (Showing X of Y entries)
        });
    });
    // $(document).ready(function () {
    //     $('form').submit(function (e) {
    //         e.preventDefault(); // Prevent the default form submission

    //         // Trigger the modal dialog
    //         $('#submitModal').modal('show');
    //     });

    //     // Handle the form submission once the user confirms in the modal
    //     $('#confirmSubmit').click(function () {
    //         // Hide the modal
    //         $('#submitModal').modal('hide');

    //         // Submit the form
    //         $('form').off('submit').submit();
    //     });
    // });


    var initialQuarterOptions = $('#Quarter').html();

    function addQuarterDetails() {
        var quarter = $('#Quarter').val();
        var target = $('#QTarget').val();
        var budget = $('#QBudget').val();

        $('#Quarter').html(initialQuarterOptions);

        if (!quarter || !target || !budget) {
            $('#quarterValidation').text("All fields are required.");
            return;
        } else {
            $('#quarterValidation').text("");
        }

        var exists = false;
        $('#quarterDetailsTable tbody tr').each(function () {
            var selectedQuarter = $(this).find('select[name*="Quarter"]').val();
            if (selectedQuarter === quarter) {
                exists = true;
                return false;
            }
        });

        if (exists) {
            $('#quarterValidation').text("Selected quarter already exists.");
            return;
        }

        var $table = $('#quarterDetailsTable').DataTable();

        var options = '';
        $('#Quarter option').each(function () {
            var value = $(this).val();
            var text = $(this).text();
            var selected = value === quarter ? 'selected' : '';
            options += `<option value="${value}" ${selected}>${text}</option>`;
        });

        var rowNode = $table.row.add([
            $table.rows().count() + 1,
            `<select name="QuaterlyPlans[${$table.rows().count()}].Quarter" readonly class="form-control">
                    ${options}
                 </select>`,
            `<input name="QuaterlyPlans[${$table.rows().count()}].QTarget" value="${target}" readonly class="form-control" />`,
            `<input name="QuaterlyPlans[${$table.rows().count()}].QBudget" value="${budget}" readonly class="form-control" />`,
            `<button type="button" class="btn btn-danger delete-btn" onclick="removeQuarterDetails(this)" data-toggle="tooltip" data-placement="top" title="Delete">
                    <i class="bx bx-message-square-x"></i>
                 </button>`
        ]).draw(false).node();

        // Reset input fields
        $('#Quarter').val('');
        $('#QTarget').val('');
        $('#QBudget').val('');

        // Show the accordion section
        $('#accordionQuarterDetailsCollapse').addClass('show');
    }

    function removeQuarterDetails(button) {
        var $table = $('#quarterDetailsTable').DataTable();
        $table.row($(button).parents('tr')).remove().draw();

        $table.rows().every(function (rowIdx, tableLoop, rowLoop) {
            this.cell(rowIdx, 0).data(rowIdx + 1);
        });
    }

    function SetBudgetValue() {
        var target = $('#QTarget').val();
        var budgetAmount = $('#budgetAmount').val();

        if (target != null && budgetAmount != null) {
            var budVal = target * budgetAmount;
            $('#QBudget').val(budVal);
        }
    }

    function loadStrategicActions(interventionId) {
        if (interventionId) {
            $.getJSON('@Url.Action("GetStrategicActions")', { interventionId: interventionId }, function (data) {
                var $actionDropdown = $('#StrategicAction');
                $actionDropdown.empty();
                $actionDropdown.append('<option value="">Select Strategic Action</option>');
                $.each(data, function (index, item) {
                    $actionDropdown.append('<option value="' + item.intAction + '">' + item.actionName + '</option>');
                });
            });
        }
    }

    function loadActivities(actionId) {
        if (actionId) {
            $.getJSON('@Url.Action("GetActivities")', { actionId: actionId }, function (data) {
                var $activityDropdown = $('#Activity');
                $activityDropdown.empty();
                $activityDropdown.append('<option value="">Select Activity</option>');
                $.each(data, function (index, item) {
                    $activityDropdown.append('<option value="' + item.intActivity + '">' + item.activityName + '</option>');
                });
            });
        }
    }

    function validateQuarters() {
        var $tableBody = $('#quarterDetailsTable tbody');
        var rowCount = $tableBody.find('tr').length;

        if (rowCount === 0) {
            $('#formValidation').text("Please add at least one quarter.");
            return false; // Prevent form submission
        } else {
            $('#formValidation').text(""); // Clear any previous validation messages
            return true; // Allow form submission
        }
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
