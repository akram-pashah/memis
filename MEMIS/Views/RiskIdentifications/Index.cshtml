@using MEMIS.Data.Risk;
@using System.Security.Claims;
@using Microsoft.AspNetCore.Identity;
@model cloudscribe.Pagination.Models.PagedResult<RiskIdentification>
@using MEMIS.Components;

@{
  ViewData["Title"] = "Risk and Opportunities Assessment";
  //Layout = "~/Views/Shared/_RiskLayout.cshtml";
  Layout = "~/Pages/Shared/_ContentNavbarLayout.cshtml";
}
<style>
    .content {
        width: calc(100% - 280px);
    }

    table {
        font-size: 12px;
    }
</style>
<h1>Risk and Opportunities Assessment</h1>

<p>
    <a asp-action="Create">Create New</a> |
    @* <a asp-action="Verify">Verify</a> *@
</p>@* 
<component type="typeof(MyGrid)" render-mode="ServerPrerendered" />
<component type="typeof(RiskCreate)" render-mode="ServerPrerendered" /> *@
<div style="width:100%; overflow-x:auto;">
    <table class="table table-striped table-bordered table-hover dt-responsive nowrap">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].IdentifiedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].FocusArea)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].StrategicObjective)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].Activity)
                </th> 
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].RiskDescription)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].Events)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].RiskSource)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].RiskCause)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].RiskConsequence)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].RiskOwner)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].RiskConsequenceId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].RiskLikelihoodId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].IsVerified)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Data)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdentifiedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FocusAreaFk.FocusAreaName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StrategicPlanFk.ObjectiveName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ActivityFk.activityName)
                    </td> 
                    <td>
                        @Html.DisplayFor(modelItem => item.RiskDescription)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Events)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RiskSource)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RiskCause)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RiskConsequence)
                    </td>
                    <td>
                        @ViewBag.Users.FindByIdAsync(item.RiskOwner).Result.UserName
                    </td>
                    <td>
                        @Enum.GetName(typeof(RiskConsequence), item.RiskConsequenceId)
                    </td>
                    <td>
                        @Enum.GetName(typeof(RiskLikelihood), item.RiskLikelihoodId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsVerified)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.RiskId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.RiskId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.RiskId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <cs-pager cs-paging-pagenumber="@Model.PageNumber"
              cs-paging-totalitems="@Model.TotalItems"
              cs-paging-pagesize="@Model.PageSize"
              cs-pagenumber-param="pagenumber"
              asp-controller="RiskIdentifications"
              asp-action="Index"
              cs-pager-li-current-class="page-item active"
              cs-pager-li-other-class="page-item"
              cs-pager-li-non-active-class="page-item disabled"
              cs-pager-link-current-class="page-link"
              cs-pager-link-other-class="page-link"></cs-pager>
</div>
