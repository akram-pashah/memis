@using MEMIS.Data.Risk;
@model cloudscribe.Pagination.Models.PagedResult<RiskRegister>

@{
  ViewData["Title"] = "Risk Tolerence/Apetite";
  //Layout = "~/Views/Shared/_RiskLayout.cshtml";
  Layout = "~/Pages/Shared/_ContentNavbarLayout.cshtml";
}
<style>
    .content {
        width: calc(100% - 280px);
    }

    table {
        font-size: 12px;
    }
</style>

<div class="row">
    <div class="col">
        <h3>Risk Tolerence/Apetite</h3>
    </div>
</div>

<div class="card">
  <div class="card-body">
        <div style="width:100%; overflow-x:auto;">
            <table id="RiskTable" class="table table-striped table-bordered table-hover dt-responsive nowrap">
                <thead class="table-active">
                    <tr>
                        <th>
                            Select
                        </th>
                        <th hidden>
                            @Html.DisplayNameFor(model => model.Data[0].RiskRefID)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].IdentifiedDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].FocusArea)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].StrategicObjective)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].Activity)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].RiskDescription)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].Events)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].RiskSource)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].RiskCause)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].RiskConsequence)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].RiskOwner)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].RiskConsequenceId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].RiskLikelihoodId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].riskTolerence)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Data[0].riskTolerenceJustification)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Data)
                    {
                        <tr>

                            <td>
                                <input type="checkbox" class="VerifyCheckbox" value="true" />
                            </td>
                            <td hidden>
                                @Html.DisplayFor(modelItem => item.RiskRefID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IdentifiedDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FocusAreaFk.FocusAreaName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StrategicPlanFk.ObjectiveName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ActivityFk.activityName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RiskDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Events)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RiskSource)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RiskCause)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RiskConsequence)
                            </td>
                            <td>
                                @ViewBag.Users.FindByIdAsync(item.RiskOwner).Result.UserName
                            </td>
                            <td>
                                @Enum.GetName(typeof(RiskConsequence), item.RiskConsequenceId)
                            </td>
                            <td>
                                @Enum.GetName(typeof(RiskLikelihood), item.RiskLikelihoodId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.riskTolerence)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.riskTolerenceJustification)
                            </td>
                            <td>
                                <div class="btn-group" role="group" aria-label="Actions">
                                    <a asp-action="Details" asp-route-id="@item.RiskRefID" class="btn btn-info" data-toggle="tooltip" data-placement="top" title="Details">
                                        <i class='bx bx-detail'></i>
                                    </a>
                                    <a asp-action="RiskTolerenceCreate" asp-route-id="@item.RiskRefID" class="btn btn-warning" data-toggle="tooltip" data-placement="top" title="Verify">
                                        <i class='bx bx-check'></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <cs-pager cs-paging-pagenumber="@Model.PageNumber"
                      cs-paging-totalitems="@Model.TotalItems"
                      cs-paging-pagesize="@Model.PageSize"
                      cs-pagenumber-param="pagenumber"
                      asp-controller="RiskIdentifications"
                      asp-action="Index"
                      cs-pager-li-current-class="page-item active"
                      cs-pager-li-other-class="page-item"
                      cs-pager-li-non-active-class="page-item disabled"
                      cs-pager-link-current-class="page-link"
                      cs-pager-link-other-class="page-link"></cs-pager>
        </div>
    </div>
</div>


@section Scripts {

    <script>

        $('#VerifyRiskButton').click(function () {
            GetSelected(true);
            sleep(1000);
            window.location.reload();
        });
        $('#UnVerifyRiskButton').click(function () {
            GetSelected(false);
            sleep(1000);
            window.location.reload();
        });
        function GetSelected(Isverified) {
           
            var grid = document.getElementById("RiskTable");
            var checkBoxes = grid.getElementsByClassName("VerifyCheckbox");
            for (var i = 0; i < checkBoxes.length; i++) {
                if (checkBoxes[i].checked) {
                    var row = checkBoxes[i].parentNode.parentNode;
                    $.ajax({
                        url: '/RiskIdentifications/VerifyRisk',
                        type: 'GET',
                        data: { id: row.cells[1].innerText, IsVerified: Isverified },
                        dataType: 'json',
                        success: function (data) {
                        },
                        error: function (error) {
                        }
                    });
                }
            }
            
        }
        function sleep(milliseconds) {
            const date = Date.now();
            let currentDate = null;
            do {
                currentDate = Date.now();
            } while (currentDate - date < milliseconds);
        }



    </script>
    @*@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}*@
}
