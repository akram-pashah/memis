@using MEMIS.Data;
@model cloudscribe.Pagination.Models.PagedResult<KPIMaster>

@{
    ViewData["Title"] = "KPI M & E Framework";
    Layout = "~/Views/Shared/_MELayout.cshtml";
}
<style>
    .content {
        width: calc(100% - 280px);
    }

    table {
        font-size: 12px;
    }
</style>
<h1>KPI M & E Framework</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="post">
    <div class="row">
        <div class="col-md-3">
            <input type="text" class="form-control form-control-sm" name="perfind" placeholder="Performance Indicator" />
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-sm btn-outline-primary">Search</button>
        </div>
    </div>
</form>
<div style="width:100%; overflow-x:auto;margin-top:20px;">
    <table class="table table-striped table-bordered table-hover dt-responsive nowrap" id="datatable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].PerformanceIndicator)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].TypeofIndicator)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].IndicatorFormulae)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].IndicatorDefinition)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].OriginalBaseline)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].Indicatorclassification)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].DataType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].Unitofmeasure)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].FrequencyofReporting)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].FY1)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].FY2)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].FY3)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].FY4)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].FY5)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].MeansofVerification)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].ResponsibleParty)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Data)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.PerformanceIndicator)
                    </td>
                    <td>
                        @GetTypeofIndicator(item.TypeofIndicator)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IndicatorFormulae)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IndicatorDefinition)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OriginalBaseline)
                    </td>
                    <td>
                        @GetIndicatorclassification(item.Indicatorclassification)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DataType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Unitofmeasure)
                    </td>
                    <td>
                        @GetFrequencyofReporting(item.FrequencyofReporting)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FY1)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FY2)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FY3)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FY4)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FY5)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MeansofVerification)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ResponsibleParty)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
            @functions
            {
                public string GetTypeofIndicator(int type)
                {
                    foreach (var ntype in ListHelper.TypeofIndicator())
                    {
                        if (Convert.ToInt32(ntype.Value) == type)
                        {
                            return ntype.Text;
                        }
                    }
                    return "NA";
                }
                public string GetIndicatorclassification(int classification)
                {
                    foreach (var nclass in ListHelper.Indicatorclassification())
                    {
                        if (Convert.ToInt32(nclass.Value) == classification)
                        {
                            return nclass.Text;
                        }
                    }
                    return "NA";
                }
                public string GetFrequencyofReporting(int reporting)
                {
                    foreach (var nreporting in ListHelper.FrequencyofReporting())
                    {
                        if (Convert.ToInt32(nreporting.Value) == reporting)
                        {
                            return nreporting.Text;
                        }
                    }
                    return "NA";
                }
            }
        </tbody>
    </table>
    <cs-pager cs-paging-pagenumber="@Model.PageNumber"
              cs-paging-totalitems="@Model.TotalItems"
              cs-paging-pagesize="@Model.PageSize"
              cs-pagenumber-param="pagenumber"
              asp-controller="SDTMasters"
              asp-action="Index"
              cs-pager-li-current-class="page-item active"
              cs-pager-li-other-class="page-item"
              cs-pager-li-non-active-class="page-item disabled"
              cs-pager-link-current-class="page-link"
              cs-pager-link-other-class="page-link"></cs-pager>
</div>
