@model IEnumerable<MEMIS.Data.KPIAssessment>

<table class="table table-striped table-bordered table-hover dt-responsive nowrap" id="datatable">
  <thead >
    <tr>
      <th>
        @Html.DisplayNameFor(model => model.FY)
      </th>
      <th>
        @Html.DisplayNameFor(model => model.PerformanceIndicator)
      </th>
      <th>
        @Html.DisplayNameFor(model => model.FrequencyofReporting)
      </th>
      <th>
        @Html.DisplayNameFor(model => model.IndicatorFormulae)
      </th>

      <th>
        @Html.DisplayNameFor(model => model.IndicatorDefinition)
      </th>
      <th>
        @Html.DisplayNameFor(model => model.Target)
      </th>
      <th>
        @Html.DisplayNameFor(model => model.Numerator)
      </th>
      <th>
        @Html.DisplayNameFor(model => model.Denominator)
      </th>
      <th>
        @Html.DisplayNameFor(model => model.Rate)
      </th>
      <th>
        @Html.DisplayNameFor(model => model.Achieved)
      </th>
      <th>
        @Html.DisplayNameFor(model => model.Justification)
      </th>
      <th>
        Department
      </th>
      @*<th>Actions</th>*@
    </tr>
  </thead>
  <tbody>
    @foreach (var item in Model)
    {

      <tr>
        <td>
          @GetFinYear(item.FY)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.PerformanceIndicator)
        </td>
        <td>
          @GetFrequencyofReporting(item.FrequencyofReporting)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.IndicatorFormulae)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.IndicatorDefinition)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.Target)
        </td>
        <td>
          Achieved
          @Html.DisplayFor(modelItem => item.Numerator)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.Denominator)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.Rate)
        </td>
        <td>
          <span class="badge" style="background-color:@(item.Achieved=="1.0"?"#00b050":item.Achieved=="0.5"?"#fefe00":"#fd0000")">
            @getAchievement(item.Achieved)
          </span>
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.Justification)
        </td>
        <td>
          @if (item.KPIMasterFk?.DepartmentFk != null)
          {
            Html.DisplayFor(modelItem => item.KPIMasterFk.DepartmentFk.deptName);
          }
        </td>
        @*<td>
          <div class="btn-group" role="group" aria-label="Actions">
            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-secondary" data-toggle="tooltip" data-placement="top" title="Edit">
              <i class='bx bx-edit'></i>
            </a>
            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info" data-toggle="tooltip" data-placement="top" title="Details">
              <i class='bx bx-detail'></i>
            </a>
            <form asp-action="Delete" asp-route-id="@item.Id">
              <a asp-action="Delete" onclick="return confirm('Are you sure do you want to delete this record?')" asp-route-id="@item.Id" class="btn btn-danger" data-toggle="tooltip" data-placement="top" title="Delete">
                <i class='bx bx-message-square-x'></i>
              </a>
            </form>
          </div>
        </td>*@
      </tr>
    }
    @functions
{ public string GetFinYear(int year)
      {
        foreach (var nmonth in ListHelper.FYear())
        {
          if (Convert.ToInt32(nmonth.Value) == year)
          {
            return nmonth.Text;
          }
        }
        return "NA";
      }
      public string getAchievement(string achieve)
      {
        foreach (var nachieve in ListHelper.AchievementStatus())
        {
          if (nachieve.Value == achieve)
          {
            return nachieve.Text;
          }
        }
        return "NA";
      }
      public string GetFrequencyofReporting(int reporting)
      {
        foreach (var nreporting in ListHelper.FrequencyofReporting())
        {
          if (Convert.ToInt32(nreporting.Value) == reporting)
          {
            return nreporting.Text;
          }
        }
        return "NA";
      } }

  </tbody>
</table>
