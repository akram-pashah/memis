@using MEMIS.Data;
@using MEMIS.Enums;
@model List<ActivityAssessmentRegion>

@{
    ViewData["Title"] = "Index";
    //Layout = "~/Views/Shared/_MELayout.cshtml";
    Layout = "~/Pages/Shared/_ContentNavbarLayout.cshtml";
    var selectedQuarter = ViewData["SelectedQuarter"]?.ToString();
}

<div class="row">
    <div class="col">
        <h3>Regional Activity Assessment</h3>
    </div>
</div>
<div class="modal fade" id="submitModal" tabindex="-1" role="dialog" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="successModalLabel">Submission Status</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Submitted successfully!
            </div>
            <div class="modal-footer">
                <button type="button" id="confirmSubmit" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-header">
        <div class="row">
            <form asp-action="ConsolidatedRegAssessment" method="get">
                <div class="row">
                    @* <div class="col-4">
                    <div class="form-group">
                    <label for="departmentSelect">Select Department:</label>
                    @Html.DropDownList("selectedDeptId", (SelectList)ViewBag.Departments, "-- Select a Department --", new { @class = "form-control form-select" })
                    </div>
                    </div> *@
                    <div class="col-4">
                        <div class="form-group">
                            <label for="departmentSelect">Select Quarter:</label>
                            @Html.DropDownList("quarter", new SelectList(new[] {
                            new { Value = "", Text = "-- Select Quarter --" },
                            new { Value = "1", Text = "Quarter 1" },
                            new { Value = "2", Text = "Quarter 2" },
                            new { Value = "3", Text = "Quarter 3" },
                            new { Value = "4", Text = "Quarter 4" }
                            }, "Value", "Text", selectedQuarter), new { @class = "form-control form-select" })
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-group">
                            <label>&nbsp;</label>
                        </div>
                        <button type="submit" name="action" value="Load" class="btn btn-primary">Load</button>
                        @* <button type="submit" name="action" value="Export" class="btn btn-outline-success float-end float-right">Export to Excel</button> *@
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="card-body" style="width:100%; overflow-x:auto;margin-top:20px;">
        <table class="table table-striped table-hover dt-responsive nowrap">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model[0].ActivityAssessFk.intIntervention)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].ActivityAssessFk.intAction)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].ActivityAssessFk.intActivity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].ActivityAssessFk.outputIndicator)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].ActivityAssessFk.baseline)
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @if (item.ActivityAssessFk != null && item.ActivityAssessFk?.StrategicIntervention != null)
                            {
                                @Html.DisplayFor(modelItem => item.ActivityAssessFk.StrategicIntervention.InterventionName)
                            }
                            else
                            {
                                <p>N/A</p>
                            }
                        </td>
                        <td>
                            @if (item.ActivityAssessFk != null && item.ActivityAssessFk?.StrategicAction != null)
                            {
                                @Html.DisplayFor(modelItem => item.ActivityAssessFk.StrategicAction.actionName)
                            }
                            else
                            {
                                <p>N/A</p>
                            }
                        </td>
                        <td>
                            @if (item.ActivityAssessFk != null && item.ActivityAssessFk?.ActivityFk != null)
                            {
                                @Html.DisplayFor(modelItem => item.ActivityAssessFk.ActivityFk.activityName)
                            }
                            else
                            {
                                <p>N/A</p>
                            }
                        </td>
                        <td>
                            @if (item.ActivityAssessFk != null)
                            {
                                @Html.DisplayFor(modelItem => item.ActivityAssessFk.outputIndicator)
                            }
                            else
                            {
                                <p>N/A</p>
                            }
                        </td>
                        <td>
                            @if (item.ActivityAssessFk != null)
                            {
                                @Html.DisplayFor(modelItem => item.ActivityAssessFk.baseline)
                            }
                            else
                            {
                                <p>N/A</p>
                            }
                        </td>
                        <td>
                            <div class="btn-group" role="group" aria-label="Actions">
                                <a asp-action="EditRegionalTarget" asp-route-id="@item.intRegionAssess" class="btn btn-secondary" data-toggle="tooltip" data-placement="top" title="Set Regional Target">
                                    <i class='bx bxs-edit'></i>
                                </a>
                                <a asp-action="DeleteRegionalTarget" asp-route-id="@item.intRegionAssess" class="btn btn-warning" data-toggle="tooltip" data-placement="top" title="Delete Regional Target">
                                    <i class='bx bxs-trash'></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>

</div>

